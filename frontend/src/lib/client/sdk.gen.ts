// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, urlSearchParamsBodySerializer } from '@hey-api/client-fetch';
import type { DeleteUserAccountDeleteData, DeleteUserAccountDeleteResponse, ReadUsersMeAccountGetData, ReadUsersMeAccountGetResponse, UpdateUserInfoAccountPutData, UpdateUserInfoAccountPutResponse, UpdateUserInfoAccountPutError, UpdatePasswordAccountPasswordPutData, UpdatePasswordAccountPasswordPutResponse, UpdatePasswordAccountPasswordPutError, RegisterAuthRegisterPostData, RegisterAuthRegisterPostResponse, RegisterAuthRegisterPostError, LoginAuthLoginPostData, LoginAuthLoginPostResponse, LoginAuthLoginPostError, ConfirmEmailAuthConfirmEmailPostData, ConfirmEmailAuthConfirmEmailPostResponse, ConfirmEmailAuthConfirmEmailPostError, ReadGroupsGroupsGetData, ReadGroupsGroupsGetResponse, CreateGroupGroupsPostData, CreateGroupGroupsPostResponse, CreateGroupGroupsPostError, DeleteGroupGroupsGroupIdDeleteData, DeleteGroupGroupsGroupIdDeleteResponse, DeleteGroupGroupsGroupIdDeleteError, ReadGroupGroupsGroupIdGetData, ReadGroupGroupsGroupIdGetResponse, ReadGroupGroupsGroupIdGetError, UpdateGroupGroupsGroupIdPutData, UpdateGroupGroupsGroupIdPutResponse, UpdateGroupGroupsGroupIdPutError, DeleteUserFromGroupGroupsGroupIdUsersUserIdDeleteData, DeleteUserFromGroupGroupsGroupIdUsersUserIdDeleteResponse, DeleteUserFromGroupGroupsGroupIdUsersUserIdDeleteError, GetMyInvitesInvitesMyInvitesGetData, GetMyInvitesInvitesMyInvitesGetResponse, GenerateInviteLinkInvitesGroupIdGeneratePostData, GenerateInviteLinkInvitesGroupIdGeneratePostResponse, GenerateInviteLinkInvitesGroupIdGeneratePostError, InviteByEmailInvitesGroupIdEmailPostData, InviteByEmailInvitesGroupIdEmailPostResponse, InviteByEmailInvitesGroupIdEmailPostError, AcceptInviteInvitesAcceptTokenGetData, AcceptInviteInvitesAcceptTokenGetResponse, AcceptInviteInvitesAcceptTokenGetError, RejectInviteInvitesRejectTokenDeleteData, RejectInviteInvitesRejectTokenDeleteResponse, RejectInviteInvitesRejectTokenDeleteError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Delete User
 */
export const deleteUserAccountDelete = <ThrowOnError extends boolean = false>(options?: Options<DeleteUserAccountDeleteData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteUserAccountDeleteResponse, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/account/',
        ...options
    });
};

/**
 * Read Users Me
 */
export const readUsersMeAccountGet = <ThrowOnError extends boolean = false>(options?: Options<ReadUsersMeAccountGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ReadUsersMeAccountGetResponse, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/account/',
        ...options
    });
};

/**
 * Update User Info
 */
export const updateUserInfoAccountPut = <ThrowOnError extends boolean = false>(options: Options<UpdateUserInfoAccountPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateUserInfoAccountPutResponse, UpdateUserInfoAccountPutError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/account/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Update Password
 */
export const updatePasswordAccountPasswordPut = <ThrowOnError extends boolean = false>(options: Options<UpdatePasswordAccountPasswordPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdatePasswordAccountPasswordPutResponse, UpdatePasswordAccountPasswordPutError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/account/password',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Register
 */
export const registerAuthRegisterPost = <ThrowOnError extends boolean = false>(options: Options<RegisterAuthRegisterPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<RegisterAuthRegisterPostResponse, RegisterAuthRegisterPostError, ThrowOnError>({
        url: '/auth/register',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Login
 */
export const loginAuthLoginPost = <ThrowOnError extends boolean = false>(options: Options<LoginAuthLoginPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoginAuthLoginPostResponse, LoginAuthLoginPostError, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        url: '/auth/login',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        }
    });
};

/**
 * Confirm Email
 */
export const confirmEmailAuthConfirmEmailPost = <ThrowOnError extends boolean = false>(options: Options<ConfirmEmailAuthConfirmEmailPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ConfirmEmailAuthConfirmEmailPostResponse, ConfirmEmailAuthConfirmEmailPostError, ThrowOnError>({
        url: '/auth/confirm-email',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Read Groups
 */
export const readGroupsGroupsGet = <ThrowOnError extends boolean = false>(options?: Options<ReadGroupsGroupsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ReadGroupsGroupsGetResponse, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/groups/',
        ...options
    });
};

/**
 * Create Group
 */
export const createGroupGroupsPost = <ThrowOnError extends boolean = false>(options: Options<CreateGroupGroupsPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateGroupGroupsPostResponse, CreateGroupGroupsPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/groups/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Delete Group
 */
export const deleteGroupGroupsGroupIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteGroupGroupsGroupIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteGroupGroupsGroupIdDeleteResponse, DeleteGroupGroupsGroupIdDeleteError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/groups/{group_id}',
        ...options
    });
};

/**
 * Read Group
 */
export const readGroupGroupsGroupIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadGroupGroupsGroupIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ReadGroupGroupsGroupIdGetResponse, ReadGroupGroupsGroupIdGetError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/groups/{group_id}',
        ...options
    });
};

/**
 * Update Group
 */
export const updateGroupGroupsGroupIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateGroupGroupsGroupIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateGroupGroupsGroupIdPutResponse, UpdateGroupGroupsGroupIdPutError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/groups/{group_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Delete User From Group
 */
export const deleteUserFromGroupGroupsGroupIdUsersUserIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteUserFromGroupGroupsGroupIdUsersUserIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserFromGroupGroupsGroupIdUsersUserIdDeleteResponse, DeleteUserFromGroupGroupsGroupIdUsersUserIdDeleteError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/groups/{group_id}/users/{user_id}',
        ...options
    });
};

/**
 * Get My Invites
 */
export const getMyInvitesInvitesMyInvitesGet = <ThrowOnError extends boolean = false>(options?: Options<GetMyInvitesInvitesMyInvitesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMyInvitesInvitesMyInvitesGetResponse, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/invites/my-invites',
        ...options
    });
};

/**
 * Generate Invite Link
 */
export const generateInviteLinkInvitesGroupIdGeneratePost = <ThrowOnError extends boolean = false>(options: Options<GenerateInviteLinkInvitesGroupIdGeneratePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GenerateInviteLinkInvitesGroupIdGeneratePostResponse, GenerateInviteLinkInvitesGroupIdGeneratePostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/invites/{group_id}/generate',
        ...options
    });
};

/**
 * Invite By Email
 */
export const inviteByEmailInvitesGroupIdEmailPost = <ThrowOnError extends boolean = false>(options: Options<InviteByEmailInvitesGroupIdEmailPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<InviteByEmailInvitesGroupIdEmailPostResponse, InviteByEmailInvitesGroupIdEmailPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/invites/{group_id}/email',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Accept Invite
 */
export const acceptInviteInvitesAcceptTokenGet = <ThrowOnError extends boolean = false>(options: Options<AcceptInviteInvitesAcceptTokenGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<AcceptInviteInvitesAcceptTokenGetResponse, AcceptInviteInvitesAcceptTokenGetError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/invites/accept/{token}',
        ...options
    });
};

/**
 * Reject Invite
 */
export const rejectInviteInvitesRejectTokenDelete = <ThrowOnError extends boolean = false>(options: Options<RejectInviteInvitesRejectTokenDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<RejectInviteInvitesRejectTokenDeleteResponse, RejectInviteInvitesRejectTokenDeleteError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/invites/reject/{token}',
        ...options
    });
};